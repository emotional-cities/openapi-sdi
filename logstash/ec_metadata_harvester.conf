# Connection to Elasticsearch
input {
        file {
                path => "/in/metadata.csv"
                start_position => "beginning"
                sincedb_path => "/dev/null"
        }
}
# Transform
filter {
        csv {
                separator => "|"
                skip_header => "true"
                columns =>["id", "title", "description", "license", "contactPoint_name", "contactPoint_institution", "contactPoint_email", "publisher", "keywords", "themes", "bbox", "geometry_coordinates", "temporal_interval", "features_endpoint", "tiles_endpoint", "wms_endpoint"]
        }

        mutate {
                add_field => [  "[properties][id]", "%{id}",
                                "recordCreated", "%{@timestamp}",
                                "recordUpdated", "%{@timestamp}",
                                "[properties][created]", "%{@timestamp}",
                                "[properties][updated]", "%{@timestamp}",
                                "[properties][type]", "Feature",
                                "[properties][title]", "%{title}",
                                "[properties][description]", "%{description}",
                                "[properties][language]", "en",
                                "[properties][publisher]", "%{publisher}",
                                "[properties][formats]", "HTML",
                                "[properties][formats]", "GeoJSON",
                                "[properties][contactPoint][institution]", "%{contactPoint_institution}"
                        ]
        }

        if [features_endpoint] {
                mutate {
                        add_field => ["[properties][associations][0][href]", "%{features_endpoint}"]
                        add_field => ["[properties][associations][0][rel]", "item"]
                        add_field => ["[properties][associations][0][type]", "application/geo+json"]
                        add_field => ["[properties][associations][0][title]", "%{title} - OGC API Features"]
                }
        }

        if [tiles_endpoint] {
                mutate {
                        add_field => ["[properties][associations][1][href]", "%{tiles_endpoint}"]
                        add_field => ["[properties][associations][1][rel]", "item"]
                        add_field => ["[properties][associations][1][type]", "application/geo+json"]
                        add_field => ["[properties][associations][1][title]", "%{title} - OGC API Tiles"]
                }
        }

        if [wms_endpoint] {
                mutate {
                        add_field => ["[properties][associations][2][href]", "%{wms_endpoint}"]
                        add_field => ["[properties][associations][2][rel]", "item"]
                        add_field => ["[properties][associations][2][type]", "OGC:WMS"]
                        add_field => ["[properties][associations][2][title]", "%{title} - WMS"]
                }
        }

        mutate {
                split => { "[properties][associations]" => "," }
        }

        mutate {
                join => { "[properties][associations]" => "," }
        }

        if [contactPoint_name] {
                mutate { add_field => ["[properties][contactPoint][name]", "%{contactPoint_name}"] }
        }

        if [contactPoint_email] {
                mutate { add_field => ["[properties][contactPoint][email]", "%{contactPoint_email}"] }
        }

        if [keywords] {
                mutate { 
                        split => { "keywords" => ";" }
                }
                mutate { 
                        convert => { "keywords" => "string" }
                }
                mutate { 
                        merge => ["[properties][keywords]", "keywords"] 
                }
        }

        if [themes] {
                mutate { 
                        split => { "themes" => ";" }
                }
                mutate { 
                        convert => { "themes" => "string" }
                }
                mutate { 
                        merge => ["[properties][themes][concepts]", "themes"] 
                }
        }

        mutate {
                add_field => { "[properties][extent][spatial][crs]" => "http://www.opengis.net/def/crs/OGC/1.3/CRS84" }
                add_field => { "[geometry][type]" => "Polygon" }
                add_field => { "[temporal][trs]" => "http://www.opengis.net/def/uom/ISO-8601/0/Gregorian" }
        }

        json {
                source => "bbox"
                target => "[properties][extent][spatial][bbox]"
        }

        json {
                source => "geometry_coordinates"
                target => "[geometry][coordinates]"
        }

        json {
                source => "temporal_interval"
                target => "[temporal][interval]"
        }

        mutate {
                remove_field => [
                                "title",
                                "description",
                                "license",
                                "contactPoint_name",
                                "contactPoint_institution",
                                "contactPoint_email",
                                "publisher",
                                "keywords",
                                "themes",
                                "bbox",
                                "geom",
                                "geometry_coordinates",
                                "temporal_interval",
                                "features_endpoint",
                                "tiles_endpoint",
                                "wms_endpoint",
                                "message",
                                "event",
                                "original",
                                "log",
                                "host"]
        }
}
# Output to Elasticsearch
output {
        elasticsearch {
                hosts => ["elastic:9200"]
                #user => "elastic"
                #password => "elastic12pr2"
                index => "ec_catalog"
                #template_overwrite => true
                #template_name => "metadata_template"
                # ilm_enabled => false
                # manage_template => false
                document_id => "%{[id]}"
                doc_as_upsert => true
        }
}
