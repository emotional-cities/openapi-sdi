# Connection to Elasticsearch
input {
        elasticsearch {
                hosts => ["elastic:9200"]
                #user => "elastic"
                #password => "elastic12pr2"
                index => "masked"
                #ilm_enabled => false
                #manage_template => false
                #document_id => "%{_id}"
                #doc_as_upsert => true
        }
}
# Data transformation
filter {
        kv {
                id => "add_metadata"
                add_field => [ "recordId", "%{[properties][fid]}",
                                "recordCreated", "%{@timestamp}",
                                "recordUpdated", "%{@timestamp}",
                                "[properties][created]", "%{@timestamp}",
                                "[properties][updated]", "%{@timestamp}" ]
                default_keys => [ "[properties][type]", "Feature",
                                "[properties][title]", "Example test data",
                                "[properties][description]", "Example measurements around the city of Lisbon",
                                "[properties][keywords]", "experiment",
                                "[properties][keywords]", "temperature",
                                "[properties][language]", "en",
                                "[properties][publisher]", "https://byteroad.net/",
                                "[properties][formats]", "HTML",
                                "[properties][formats]", "GeoJSON",
                                "[properties][contactPoint]", "Byte Road"]
        }
        mutate {
                id => "populate_associations_1"
                add_field => { "[temp][href]" => "https://emotional.byteroad.net/collections/masked/items/%{[properties][fid]}?f=json"
                                "[temp][rel]" => "item"
                                "[temp][title]" => "Link to the feature in JSON format"
                                "[temp][type]" => "application/geo+json" }
        }
        ruby {
                code => '
                        myarray = [event.get("[temp]")]
                        event.set("[properties][associations]", myarray)
                '
        }
        mutate {
                id => "remove_features"
                remove_field => [ "[properties][datetime]",
                                "[properties][speed_meters_per_hour]",
                                "[properties][s1_Temperature_Celsius]",
                                "[properties][decibel_dB]",
                                "[properties][pm_concentration_pm100_micrograms_cube_meters]",
                                "[properties][pm_concentration_pm10_micrograms_cube_meters]",
                                "[properties][pm_concentration_pm25_micrograms_cube_meters]",
                                "[properties][pm_count_greater03um_nan]",
                                "[properties][pm_count_greater05um_nan]",
                                "[properties][pm_count_greater100um_nan]",
                                "[properties][pm_count_greater10um_nan]",
                                "[properties][pm_count_greater25um_nan]",
                                "[properties][pm_count_greater50um_nan]",
                                "[properties][s2_Temperature_Celsius]",
                                "[properties][co2_concentration_ppm]",
                                "[properties][Humidity_percentageRH]",
                                "[properties][s3_Temperature_Celsius]",
                                "[properties][MRT]",
                                "[properties][UTCI]",
                                "[temp]"]
        }
}
# Output to Elasticsearch
output {
        elasticsearch {
                hosts => ["elastic:9200"]
                #user => "elastic"
                #password => "elastic12pr2"
                index => "masked_metadata"
                #template_overwrite => true
                #template_name => "metadata_template"
                ilm_enabled => false
                manage_template => false
                document_id => "%{[properties][fid]}"
                doc_as_upsert => true
        }
}
